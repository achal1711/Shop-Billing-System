/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shop_billing;

import java.awt.Desktop;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import java.util.Calendar;

/**
 *
 * @author ACHAL KUMAR RAI
 */
public class Shop extends javax.swing.JFrame {
    
    public Shop() {
        initComponents();
        setResizable(false);
        setTitle("ProductBill");
        ordQtyTF.setEnabled(false);
        String query = "SELECT Name from products;";
        DefaultListModel model = (DefaultListModel)productList.getModel();
        int count = 0;
        try{
             Class.forName("java.sql.Driver");
             Connection con = DriverManager.getConnection("jdbc:mysql://localhost/test", "root",
                     "pass");
             Statement stmt = con.createStatement();
             ResultSet rs = stmt.executeQuery(query);
             while(rs.next()){
                 model.add(count, rs.getString("Name"));
                 count++;
             }
             rs.close();
             stmt.close();
             con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error in Connectivity");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        tDesLbl = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tPriceLbl = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tQtyLbl = new javax.swing.JLabel();
        buyCB = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        ordQtyTF = new javax.swing.JTextField();
        confirmBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderTbl = new javax.swing.JTable();
        dispLabel2 = new javax.swing.JLabel();
        upperTF = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        totalamount = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productList = new javax.swing.JList();
        totAmtLbl = new javax.swing.JLabel();
        submitBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();
        tcodeLbl = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        clearBtn = new javax.swing.JButton();
        tageGrpLbl = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        srchPriceRB = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        srchAgeRB = new javax.swing.JRadioButton();
        srchNameRB = new javax.swing.JRadioButton();
        searchBtn = new javax.swing.JButton();
        dispLabel1 = new javax.swing.JLabel();
        lowerTF = new javax.swing.JTextField();
        tNameLbl = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(175, 238, 238));
        jPanel1.setPreferredSize(new java.awt.Dimension(897, 970));

        tDesLbl.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tDesLbl.setForeground(new java.awt.Color(1, 27, 86));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setText("Price");

        tPriceLbl.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tPriceLbl.setForeground(new java.awt.Color(1, 27, 86));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel15.setText("Quantity in Stock");

        tQtyLbl.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tQtyLbl.setForeground(new java.awt.Color(1, 27, 86));

        buyCB.setText("CLICK HERE if you want to buy this product");
        buyCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyCBActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setText("Order Quantity");

        ordQtyTF.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ordQtyTF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(1, 27, 86)));
        ordQtyTF.setPreferredSize(new java.awt.Dimension(2, 40));

        confirmBtn.setBackground(new java.awt.Color(1, 27, 86));
        confirmBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        confirmBtn.setForeground(new java.awt.Color(255, 255, 255));
        confirmBtn.setText("Confirm Order");
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        orderTbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProductCode", "Name", "Price", "Quantity Ordered", "Amount"
            }
        ));
        orderTbl.setRowHeight(24);
        jScrollPane2.setViewportView(orderTbl);

        dispLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        dispLabel2.setText("Enter Upper Limit");

        upperTF.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        upperTF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(1, 27, 86)));
        upperTF.setPreferredSize(new java.awt.Dimension(2, 40));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("PRODUCTS ORDERED");

        jLabel4.setText("Select the product to see its details");

        totalamount.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        totalamount.setText("Total Amount Payable (Rs.)");

        productList.setBackground(new java.awt.Color(187, 222, 251));
        productList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(1, 27, 86)));
        productList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        productList.setModel(new DefaultListModel()
        );
        productList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                productListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(productList);

        totAmtLbl.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        totAmtLbl.setForeground(new java.awt.Color(1, 27, 86));
        totAmtLbl.setText("0");

        submitBtn.setBackground(new java.awt.Color(1, 27, 86));
        submitBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        submitBtn.setForeground(new java.awt.Color(255, 255, 255));
        submitBtn.setText("SUBMIT");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setText("Toy Code");

        exitBtn.setBackground(new java.awt.Color(1, 27, 86));
        exitBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        exitBtn.setForeground(new java.awt.Color(255, 255, 255));
        exitBtn.setText("EXIT");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        tcodeLbl.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tcodeLbl.setForeground(new java.awt.Color(1, 27, 86));

        jButton1.setBackground(new java.awt.Color(1, 27, 86));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("UPDATE STOCK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setText("Age Group");

        clearBtn.setBackground(new java.awt.Color(1, 27, 86));
        clearBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        tageGrpLbl.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tageGrpLbl.setForeground(new java.awt.Color(1, 27, 86));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setText("Name");

        buttonGroup1.add(srchPriceRB);
        srchPriceRB.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        srchPriceRB.setText("Price");
        srchPriceRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srchPriceRBActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Search Criterion");

        buttonGroup1.add(srchAgeRB);
        srchAgeRB.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        srchAgeRB.setText("Age");
        srchAgeRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srchAgeRBActionPerformed(evt);
            }
        });

        buttonGroup1.add(srchNameRB);
        srchNameRB.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        srchNameRB.setText("Name");
        srchNameRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srchNameRBActionPerformed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(1, 27, 86));
        searchBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Search/Refresh");
        searchBtn.setBorder(null);
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        dispLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        dispLabel1.setText("Enter Lower Limit");

        lowerTF.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lowerTF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(1, 27, 86)));
        lowerTF.setPreferredSize(new java.awt.Dimension(2, 40));

        tNameLbl.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tNameLbl.setForeground(new java.awt.Color(1, 27, 86));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setText("Description");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(confirmBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel11))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(srchAgeRB, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(16, 16, 16)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(121, 121, 121)
                                                .addComponent(srchNameRB)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(63, 63, 63))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(38, 38, 38)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(tPriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(tQtyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(51, 51, 51))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(tcodeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(64, 64, 64)
                                                                .addComponent(jLabel7))
                                                            .addComponent(tNameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(tDesLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGap(41, 41, 41)
                                                        .addComponent(tageGrpLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(buyCB))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(jLabel18))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(dispLabel1)
                        .addGap(40, 40, 40)
                        .addComponent(lowerTF, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dispLabel2)
                                .addGap(53, 53, 53)
                                .addComponent(upperTF, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel17)))))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(submitBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(totalamount)
                            .addGap(34, 34, 34)
                            .addComponent(totAmtLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(srchPriceRB, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ordQtyTF, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srchPriceRB)
                    .addComponent(srchAgeRB)
                    .addComponent(srchNameRB)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dispLabel1)
                    .addComponent(lowerTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dispLabel2)
                    .addComponent(upperTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(tcodeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(tageGrpLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(tNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(tDesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tPriceLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel13))
                                    .addComponent(tQtyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(buyCB)
                                    .addComponent(jLabel17)
                                    .addComponent(ordQtyTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(confirmBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(clearBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalamount)
                    .addComponent(totAmtLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 913, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buyCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyCBActionPerformed
        if(buyCB.isSelected())
        ordQtyTF.setEnabled(true);
        else
        ordQtyTF.setEnabled(false);
    }//GEN-LAST:event_buyCBActionPerformed

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        int qtyA = Integer.parseInt(tQtyLbl.getText());
        int qty0 = Integer.parseInt(ordQtyTF.getText());
        String selVal = (String) productList.getSelectedValue();
        Connection con;
        Statement stmt;
        if(qty0 > qtyA)
        JOptionPane
        .showMessageDialog(rootPane, "Only " + qtyA + "  items of" + tcodeLbl.getText()
            + " are in stock! \nSORRY, Your order cannot be processed.");
        else{
            float amt = qty0 * Float.parseFloat(tPriceLbl.getText());
            float total = Float.parseFloat(totAmtLbl.getText());
            DefaultTableModel model = (DefaultTableModel)orderTbl.getModel();
            int tc = Integer.parseInt(tcodeLbl.getText());
            String qry = "UPDATE products SET qtyinstock = qtyinstock - " + qty0 + " WHERE ProductCode = "
                    + tc + ";";
            String query = "SELECT qtyinstock FROM products WHERE Name = '" + selVal + "';";
            try{
                Class.forName("java.sql.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/test", "root",
                    "pass");
                stmt = con.createStatement();
                stmt.executeUpdate(qry);
                model.addRow(new Object[]{
                    tcodeLbl.getText(), tNameLbl.getText(), tPriceLbl.getText(), ordQtyTF.getText(), amt
                });
                total = total + amt;
                totAmtLbl.setText("" + total);
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next())
                tQtyLbl.setText("" + rs.getInt(1));
            }
            catch (Exception e) {
                /**Problem with the application is that if a connectivity error occurs then quantity in stock(qtyinstock)
                * automatically gets reduced by qty0(variable).So, in order to reset the stock to its original value
                * we add the current stock(qtyinstock) by qty0(variable).Suppose an error occurs then before the
                * occurence of the error the sql query:
                * String qry = "UPDATE products SET qtyinstock  = qtyinstock - " + qty0 + " WHERE ProductCode = " + tc + ";";
                * gets executed and the qtyinstock is set to qtyinstock - qty0.So, in order to restore the original value
                * we execute the query:
                * String qrys = "UPDATE products SET qtyinstock  = qtyinstock + " + qty0 + " WHERE ProductCode = " + tc + ";";
                * int catch block.
                */
                JOptionPane.showMessageDialog(null, "Error in connectivity");
                String qrys = "UPDATE products SET qtyinstock  = qtyinstock + " + qty0 + " WHERE ProductCode = " + tc + ";";
                try {
                    Class.forName("java.sql.Driver");
                    con = DriverManager.getConnection("jdbc:mysql://localhost/test", "root",
                        "pass");
                    stmt = con.createStatement();
                    stmt.executeUpdate(qrys);
                } catch (SQLException ex) {
                    Logger.getLogger(Shop.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Shop.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

            ordQtyTF.setText("");
            buyCB.setSelected(false);
            ordQtyTF.setEnabled(false);
        }
    }//GEN-LAST:event_confirmBtnActionPerformed

    private void productListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_productListValueChanged
        String selVal = (String) productList.getSelectedValue();
        String query = "SELECT * FROM products WHERE Name = '" + selVal + "';";
        try{
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/test", "root",
                "pass");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next())
            {
                tcodeLbl.setText("" + rs.getInt(1));
                tNameLbl.setText(rs.getString(2));
                tDesLbl.setText(rs.getString(3));
                tQtyLbl.setText("" + rs.getInt(4));
                tageGrpLbl.setText("" + rs.getInt(5) + " to " + rs.getInt(6));
                tPriceLbl.setText("" + rs.getFloat(8));
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error in connectivity");
        }
    }//GEN-LAST:event_productListValueChanged

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel)orderTbl.getModel();
        int count = model.getRowCount();
        String total = totAmtLbl.getText();
        String selVal = (String) productList.getSelectedValue();
        
        JTextField custName = new JTextField(10);
        JTextField phone = new JTextField(10);
        JTextField date = new JTextField(10);
        JPanel pane = new JPanel();
        pane.add(new JLabel("Name: "));
        pane.add(custName);
        pane.add(new JLabel("Phone no: "));
        pane.add(phone);
        pane.add(new JLabel("Date: "));
        pane.add(date);
        
        String time = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
        date.setText(time);
        
        int res = JOptionPane.showConfirmDialog(this, pane);
        
        if(res == JOptionPane.YES_OPTION)
        {
         try{
            
            File file = new File("../Shop_Billing/src/shop_billing/Bill.txt");
            FileWriter fw = new FileWriter(file);
            PrintWriter pw = new PrintWriter(file);
            pw.printf("%-15s%-15s%n%-15s%-15s%n%-15s%-15s%n", "Name:", custName.getText(),
                    "Phone no:", phone.getText(), "Date:", date.getText());
            pw.println("-----------------------------------------------------------------------------");
            pw.printf("%-15s%-15s%-15s%-15s%-15s%n", "ProductCode", "ProductName", "Quantity",
                    "Price", "TotalAmount");
            pw.println("-----------------------------------------------------------------------------");
            for(int i = 0; i < count; i++)
             {
              int tCode = Integer.parseInt(model.getValueAt(i, 0).toString());
              String name = model.getValueAt(i, 1).toString();
              int quant = Integer.parseInt(model.getValueAt(i, 3).toString());
              float price = Float.parseFloat(model.getValueAt(i, 2).toString());
              float amount = Float.parseFloat(model.getValueAt(i, 4).toString());
              pw.printf("%-15s%-15s%-15s%-15s%-15s%n", tCode, name, quant, price, amount);
             }
            pw.println("-----------------------------------------------------------------------------");
            pw.printf("%60s%10s", "Total Price:", total + "");
            pw.close();
            Desktop desktop = Desktop.getDesktop();
            desktop.open(file);
            //desktop.print(file);
            }
        
        catch(Exception e)
        {
            e.printStackTrace();
        }
            
        }
        
        else
        {
            JOptionPane.showMessageDialog(this, "You cancelled the order");
             String query2 = "SELECT qtyinstock FROM products WHERE Name = '" + selVal + "';";
            try
                {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/test", "root",
                     "pass");
                Statement stmt = con.createStatement();
                if(model.getRowCount() != 0)
                {
                    for(int i = 0; i < count; i++)
                    {
                    int tCode = Integer.parseInt(model.getValueAt(i, 0).toString());
                    int quant = Integer.parseInt(model.getValueAt(i, 3).toString());
                    String query = "UPDATE products SET qtyinstock = qtyinstock + " + quant
                            + " WHERE ProductCode = " + tCode + ";";
                    stmt.executeUpdate(query);
                    ResultSet rs = stmt.executeQuery(query2);
                    while(rs.next())
                    tQtyLbl.setText("" + rs.getInt(1));
                    }
                }
                
                }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, "Connectivity Error");
            }
        }
        model.setRowCount(0);
        
    }//GEN-LAST:event_submitBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Thank you for using the ProductBill");
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AddStock a = new AddStock();
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        buttonGroup1.clearSelection();
        lowerTF.setText(null);
        upperTF.setText(null);
        tcodeLbl.setText(null);
        tDesLbl.setText(null);
        tPriceLbl.setText(null);
        tNameLbl.setText(null);
        tQtyLbl.setText(null);
        tageGrpLbl.setText(null);
        totAmtLbl.setText("0");
        ordQtyTF.setText(null);
        DefaultTableModel model = (DefaultTableModel)orderTbl.getModel();
        model.setRowCount(0);
        productList.clearSelection();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void srchPriceRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srchPriceRBActionPerformed
        if(srchPriceRB.isSelected()){
            dispLabel2.setEnabled(true);
            upperTF.setEnabled(true);
        }
    }//GEN-LAST:event_srchPriceRBActionPerformed

    private void srchAgeRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srchAgeRBActionPerformed
        if(srchAgeRB.isSelected()){
            dispLabel1.setText("Enter Age");
            dispLabel2.setEnabled(false);
            upperTF.setEnabled(false);
        }
        else{
            dispLabel1.setText("Enter Lower Limit");
            dispLabel2.setEnabled(true);
            upperTF.setEnabled(true);
        }
    }//GEN-LAST:event_srchAgeRBActionPerformed

    private void srchNameRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srchNameRBActionPerformed
        if(srchNameRB.isSelected()){
            dispLabel1.setText("Enter Name");
            dispLabel2.setEnabled(false);
            upperTF.setEnabled(false);
        }
        else{
            dispLabel1.setText("Enter lower limit");
            dispLabel2.setEnabled(true);
            upperTF.setEnabled(true);
        }
    }//GEN-LAST:event_srchNameRBActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        emptyList();//method to empty the list
        String filter = "";
        if(srchNameRB.isSelected())
        filter = "WHERE Name = '" + lowerTF.getText()+ "'";
        else if(srchPriceRB.isSelected()){
            float priceL = Float.parseFloat(lowerTF.getText());
            float priceF = Float.parseFloat(upperTF.getText());
            filter = "WHERE price >=" + priceL + "and price <=" + priceF;
        }
        else if(srchAgeRB.isSelected()){
            int age = Integer.parseInt(lowerTF.getText());
            filter = "WHERE agegrplowerlimit <= " + age + " and agegrpupperlimit >= " + age;
        }
        int count = 0;
        String query = "SELECT Name from products " + filter + ";";
        DefaultListModel model = (DefaultListModel)productList.getModel();
        try{
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/test", "root",
                "pass");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next()){
                model.add(count, rs.getString("Name"));
                count++;
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error in Connectivity");
        }
        ordQtyTF.setEnabled(false);
        buyCB.setSelected(false);
    }//GEN-LAST:event_searchBtnActionPerformed

    void emptyList(){
    DefaultListModel model = (DefaultListModel)productList.getModel();
    while(model.getSize() > 0)
    model.remove(0);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Shop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox buyCB;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JLabel dispLabel1;
    private javax.swing.JLabel dispLabel2;
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lowerTF;
    private javax.swing.JTextField ordQtyTF;
    private javax.swing.JTable orderTbl;
    private javax.swing.JList productList;
    private javax.swing.JButton searchBtn;
    private javax.swing.JRadioButton srchAgeRB;
    private javax.swing.JRadioButton srchNameRB;
    private javax.swing.JRadioButton srchPriceRB;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel tDesLbl;
    private javax.swing.JLabel tNameLbl;
    private javax.swing.JLabel tPriceLbl;
    private javax.swing.JLabel tQtyLbl;
    private javax.swing.JLabel tageGrpLbl;
    private javax.swing.JLabel tcodeLbl;
    private javax.swing.JLabel totAmtLbl;
    private javax.swing.JLabel totalamount;
    private javax.swing.JTextField upperTF;
    // End of variables declaration//GEN-END:variables
}
